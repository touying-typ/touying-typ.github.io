<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://touying-typ.github.io/touying/blog</id>
    <title>Touying Blog</title>
    <updated>2024-01-17T00:00:00.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://touying-typ.github.io/touying/blog"/>
    <subtitle>Touying Blog</subtitle>
    <icon>https://touying-typ.github.io/touying/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[Touying 0.2.0]]></title>
        <id>https://touying-typ.github.io/touying/blog/touying-0-2-0</id>
        <link href="https://touying-typ.github.io/touying/blog/touying-0-2-0"/>
        <updated>2024-01-17T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Touying 0.2.0 is done.]]></summary>
        <content type="html"><![CDATA[<p>Touying 0.2.0 is done.</p>
<h2 class="anchor anchorWithStickyNavbar_LWe7" id="implemented-features">Implemented Features<a href="https://touying-typ.github.io/touying/blog/touying-0-2-0#implemented-features" class="hash-link" aria-label="Direct link to Implemented Features" title="Direct link to Implemented Features">â€‹</a></h2>
<ul class="contains-task-list containsTaskList_mC6p">
<li class="task-list-item"><input type="checkbox" disabled="" checked=""> <strong>Object-oriented programming:</strong> Singleton <code>s</code>, binding methods <code>utils.methods(s)</code> and <code>(self: obj, ..) =&gt; {..}</code> methods.</li>
<li class="task-list-item"><input type="checkbox" disabled="" checked=""> <strong>Page arguments management:</strong> Instead of using <code>#set page(..)</code>, you should use <code>self.page-args</code> to retrieve or set page parameters, thereby avoiding unnecessary creation of new pages.</li>
<li class="task-list-item"><input type="checkbox" disabled="" checked=""> <strong><code>#pause</code> for sequence content:</strong> You can use #pause at the outermost level of a slide, including inline and list.</li>
<li class="task-list-item"><input type="checkbox" disabled="" checked=""> <strong><code>#pause</code> for layout functions:</strong> You can use the <code>composer</code> parameter to add yourself layout function like <code>utils.side-by-side</code>, and simply use multiple pos parameters like <code>#slide[..][..]</code>.</li>
<li class="task-list-item"><input type="checkbox" disabled="" checked=""> <strong><code>#meanwhile</code> for synchronous display:</strong> Provide a <code>#meanwhile</code> for resetting subslides counter.</li>
<li class="task-list-item"><input type="checkbox" disabled="" checked=""> <strong><code>#pause</code> and <code>#meanwhile</code> for math equation:</strong> Provide a <code>#touying-equation("x + y pause + z")</code> for math equation animations.</li>
<li class="task-list-item"><input type="checkbox" disabled="" checked=""> <strong>Slides:</strong> Create simple slides using standard headings.</li>
<li class="task-list-item"><input type="checkbox" disabled="" checked=""> <strong>Callback-style <code>uncover</code>, <code>only</code> and <code>alternatives</code>:</strong> Based on the concise syntax provided by Polylux, allow precise control of the timing for displaying content.<!-- -->
<ul>
<li>You should manually control the number of subslides using the <code>repeat</code> parameter.</li>
</ul>
</li>
<li class="task-list-item"><input type="checkbox" disabled="" checked=""> <strong>Transparent cover:</strong> Enable transparent cover using oop syntax like <code>#let s = (s.methods.enable-transparent-cover)(self: s)</code>.</li>
<li class="task-list-item"><input type="checkbox" disabled="" checked=""> <strong>Handout mode:</strong> enable handout mode by <code>#let s = (s.methods.enable-handout-mode)(self: s)</code>.</li>
<li class="task-list-item"><input type="checkbox" disabled="" checked=""> <strong>Fit-to-width and fit-to-height:</strong> Fit-to-width for title in header and fit-to-height for image.<!-- -->
<ul>
<li><code>utils.fit-to-width(grow: true, shrink: true, width, body)</code></li>
<li><code>utils.fit-to-height(width: none, prescale-width: none, grow: true, shrink: true, height, body)</code></li>
</ul>
</li>
<li class="task-list-item"><input type="checkbox" disabled="" checked=""> <strong>Slides counter:</strong> <code>states.slide-counter.display() + " / " + states.last-slide-number</code> and <code>states.touying-progress(ratio =&gt; ..)</code>.</li>
<li class="task-list-item"><input type="checkbox" disabled="" checked=""> <strong>Appendix:</strong> Freeze the <code>last-slide-number</code> to prevent the slide number from increasing further.</li>
<li class="task-list-item"><input type="checkbox" disabled="" checked=""> <strong>Sections:</strong> Touying's built-in section support can be used to display the current section title and show progress.<!-- -->
<ul class="contains-task-list containsTaskList_mC6p">
<li class="task-list-item"><input type="checkbox" disabled="" checked=""> <code>section</code> and <code>subsection</code> parameter in <code>#slide</code> to register a new section or subsection.</li>
<li class="task-list-item"><input type="checkbox" disabled="" checked=""> <code>states.current-section-title</code> to get the current section.</li>
<li class="task-list-item"><input type="checkbox" disabled="" checked=""> <code>states.touying-outline</code> or <code>s.methods.touying-outline</code> to display a outline of sections.</li>
<li class="task-list-item"><input type="checkbox" disabled="" checked=""> <code>states.touying-final-sections(sections =&gt; ..)</code> for custom outline display.</li>
<li class="task-list-item"><input type="checkbox" disabled="" checked=""> <code>states.touying-progress-with-sections((current-sections: .., final-sections: .., current-slide-number: .., last-slide-number: ..) =&gt; ..)</code> for powerful progress display.</li>
</ul>
</li>
<li class="task-list-item"><input type="checkbox" disabled="" checked=""> <strong>Navigation bar</strong>: Navigation bar like <a href="https://github.com/zbowang/BeamerTheme" target="_blank" rel="noopener noreferrer">here</a> by <code>states.touying-progress-with-sections(..)</code>, in <code>dewdrop</code> theme.</li>
<li class="task-list-item"><input type="checkbox" disabled="" checked=""> <strong>Pdfpc:</strong> pdfpc support and export <code>.pdfpc</code> file without external tool by <code>typst query</code> command simply.</li>
</ul>]]></content>
        <author>
            <name>OrangeX4</name>
            <uri>https://github.com/OrangeX4</uri>
        </author>
        <category label="development" term="development"/>
    </entry>
</feed>