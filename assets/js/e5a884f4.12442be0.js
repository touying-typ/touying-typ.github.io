"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8300],{5606:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>o,metadata:()=>d,toc:()=>r});var t=n(5893),i=n(1151);const o={sidebar_position:4},l="Code Styles",d={id:"style",title:"Code Styles",description:"show-slides Style",source:"@site/versioned_docs/version-0.2.x/style.md",sourceDirName:".",slug:"/style",permalink:"/touying/docs/0.2.x/style",draft:!1,unlisted:!1,editUrl:"https://github.com/touying-typ/touying/tree/main/docs/versioned_docs/version-0.2.x/style.md",tags:[],version:"0.2.x",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Layout Your Contents",permalink:"/touying/docs/0.2.x/layout"},next:{title:"Dynamic Slides",permalink:"/touying/docs/0.2.x/category/dynamic-slides"}},c={},r=[{value:"show-slides Style",id:"show-slides-style",level:2},{value:"slide-block Style",id:"slide-block-style",level:2}];function a(e){const s={code:"code",h1:"h1",h2:"h2",img:"img",p:"p",pre:"pre",...(0,i.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h1,{id:"code-styles",children:"Code Styles"}),"\n",(0,t.jsx)(s.h2,{id:"show-slides-style",children:"show-slides Style"}),"\n",(0,t.jsxs)(s.p,{children:["If we only need simplicity, we can use ",(0,t.jsx)(s.code,{children:"#show: slides"})," for a cleaner syntax."]}),"\n",(0,t.jsxs)(s.p,{children:["However, this approach has corresponding drawbacks: firstly, this method may significantly impact document rendering performance. Secondly, subsequent ",(0,t.jsx)(s.code,{children:"#slide(..)"})," cannot be added directly. Instead, you need to manually mark ",(0,t.jsx)(s.code,{children:"#slides-end"}),". The most significant drawback is that complex functionalities cannot be achieved."]}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-typst",children:'#import "@preview/touying:0.2.1": *\n\n#let (init, slide, slides) = utils.methods(s)\n#show: init\n\n#show: slides\n\n= Title\n\n== First Slide\n\nHello, Touying!\n\n#pause\n\nHello, Typst!\n\n#slides-end\n\n#slide[\n  A new slide.\n]\n'})}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.img,{src:"https://github.com/touying-typ/touying/assets/34951714/db2a1b60-bc56-4fa9-a317-ee9ecc6f3895",alt:"image"})}),"\n",(0,t.jsxs)(s.p,{children:["And you can create a new page with the empty header ",(0,t.jsx)(s.code,{children:"=="}),"."]}),"\n",(0,t.jsx)(s.h2,{id:"slide-block-style",children:"slide-block Style"}),"\n",(0,t.jsx)(s.p,{children:"For better performance and more powerful capabilities, in most cases, we still need to use the code style like:"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{className:"language-typst",children:"#slide[\n  A new slide.\n]\n"})})]})}function u(e={}){const{wrapper:s}={...(0,i.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},1151:(e,s,n)=>{n.d(s,{Z:()=>d,a:()=>l});var t=n(7294);const i={},o=t.createContext(i);function l(e){const s=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function d(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),t.createElement(o.Provider,{value:s},e.children)}}}]);